{"ast":null,"code":"import React,{createContext,useCallback,useContext,useEffect,useMemo,useState}from'react';import api from'../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export function AuthProvider(_ref){let{children}=_ref;const[token,setToken]=useState(()=>localStorage.getItem('token')||null);const[role,setRole]=useState(()=>localStorage.getItem('role')||null);const[username,setUsername]=useState(()=>localStorage.getItem('username')||null);useEffect(()=>{if(token)localStorage.setItem('token',token);else localStorage.removeItem('token');},[token]);useEffect(()=>{if(role)localStorage.setItem('role',role);else localStorage.removeItem('role');},[role]);useEffect(()=>{if(username)localStorage.setItem('username',username);else localStorage.removeItem('username');},[username]);// const login = useCallback(async ({ username: user, password }) => {\n// const res = await api.login({ username: user, password });\n// const data = res?.data || {};\n// const nextToken = data.token || 'dummy-token';\n// const nextRole = (data.role || 'STUDENT').toUpperCase();\n// const nextUsername = data.username || user;\n// setToken(nextToken);\n// setRole(nextRole);\n// setUsername(nextUsername);\n// return { token: nextToken, role: nextRole, username: nextUsername };\n// }, []);\nconst login=useCallback(async _ref2=>{let{username:user,password}=_ref2;const res=await api.login({username:user,password});const data=(res===null||res===void 0?void 0:res.data)||{};const nextToken=data.token;// must be present\nif(!nextToken)throw new Error('Missing auth token from server');const nextRole=(data.role||'STUDENT').toUpperCase();const nextUsername=data.username||user;setToken(nextToken);setRole(nextRole);setUsername(nextUsername);return{token:nextToken,role:nextRole,username:nextUsername};},[]);const logout=useCallback(async()=>{try{await api.logout();}catch{}setToken(null);setRole(null);setUsername(null);},[]);const value=useMemo(()=>({token,role,username,isAuthenticated:Boolean(token&&role&&username),login,logout}),[token,role,username,login,logout]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}export function useAuth(){const ctx=useContext(AuthContext);if(!ctx)throw new Error('useAuth must be used within an AuthProvider');return ctx;}","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useMemo","useState","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","token","setToken","localStorage","getItem","role","setRole","username","setUsername","setItem","removeItem","login","_ref2","user","password","res","data","nextToken","Error","nextRole","toUpperCase","nextUsername","logout","value","isAuthenticated","Boolean","Provider","useAuth","ctx"],"sources":["/workspace/reactapp/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport api from '../utils/api';\n\nconst AuthContext = createContext(null);\n\nexport function AuthProvider({ children }) {\nconst [token, setToken] = useState(() => localStorage.getItem('token') || null);\nconst [role, setRole] = useState(() => localStorage.getItem('role') || null);\nconst [username, setUsername] = useState(() => localStorage.getItem('username') || null);\n\nuseEffect(() => {\nif (token) localStorage.setItem('token', token); else localStorage.removeItem('token');\n}, [token]);\n\nuseEffect(() => {\nif (role) localStorage.setItem('role', role); else localStorage.removeItem('role');\n}, [role]);\n\nuseEffect(() => {\nif (username) localStorage.setItem('username', username); else localStorage.removeItem('username');\n}, [username]);\n\n// const login = useCallback(async ({ username: user, password }) => {\n// const res = await api.login({ username: user, password });\n// const data = res?.data || {};\n// const nextToken = data.token || 'dummy-token';\n// const nextRole = (data.role || 'STUDENT').toUpperCase();\n// const nextUsername = data.username || user;\n// setToken(nextToken);\n// setRole(nextRole);\n// setUsername(nextUsername);\n// return { token: nextToken, role: nextRole, username: nextUsername };\n// }, []);\n\nconst login = useCallback(async ({ username: user, password }) => {\n  const res = await api.login({ username: user, password });\n  const data = res?.data || {};\n  const nextToken = data.token; // must be present\n  if (!nextToken) throw new Error('Missing auth token from server');\n  const nextRole = (data.role || 'STUDENT').toUpperCase();\n  const nextUsername = data.username || user;\n  setToken(nextToken);\n  setRole(nextRole);\n  setUsername(nextUsername);\n  return { token: nextToken, role: nextRole, username: nextUsername };\n}, []);\n\nconst logout = useCallback(async () => {\ntry { await api.logout(); } catch {}\nsetToken(null);\nsetRole(null);\nsetUsername(null);\n}, []);\n\nconst value = useMemo(() => ({\ntoken,\nrole,\nusername,\nisAuthenticated: Boolean(token && role && username),\nlogin,\nlogout,\n}), [token, role, username, login, logout]);\n\nreturn (\n<AuthContext.Provider value={value}>\n{children}\n</AuthContext.Provider>\n);\n}\n\nexport function useAuth() {\nconst ctx = useContext(AuthContext);\nif (!ctx) throw new Error('useAuth must be used within an AuthProvider');\nreturn ctx;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}