{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";export default function RoleGuard(_ref){let{roles,children}=_ref;const location=useLocation();const{isAuthenticated,role}=useAuth();if(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location.pathname},replace:true});}if(roles&&Array.isArray(roles)&&!roles.includes(role)){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}return children;}","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsx","_jsx","RoleGuard","_ref","roles","children","location","isAuthenticated","role","to","state","from","pathname","replace","Array","isArray","includes"],"sources":["/workspace/reactapp/src/routes/RoleGuard.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nexport default function RoleGuard({ roles, children }) {\nconst location = useLocation();\nconst { isAuthenticated, role } = useAuth();\n\nif (!isAuthenticated) {\nreturn <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\n}\nif (roles && Array.isArray(roles) && !roles.includes(role)) {\nreturn <Navigate to=\"/login\" replace />;\n}\nreturn children;\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,cAAe,SAAS,CAAAC,SAASA,CAAAC,IAAA,CAAsB,IAArB,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAAF,IAAA,CACrD,KAAM,CAAAG,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAES,eAAe,CAAEC,IAAK,CAAC,CAAGT,OAAO,CAAC,CAAC,CAE3C,GAAI,CAACQ,eAAe,CAAE,CACtB,mBAAON,IAAA,CAACJ,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEL,QAAQ,CAACM,QAAS,CAAE,CAACC,OAAO,MAAE,CAAC,CAC3E,CACA,GAAIT,KAAK,EAAIU,KAAK,CAACC,OAAO,CAACX,KAAK,CAAC,EAAI,CAACA,KAAK,CAACY,QAAQ,CAACR,IAAI,CAAC,CAAE,CAC5D,mBAAOP,IAAA,CAACJ,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAACI,OAAO,MAAE,CAAC,CACvC,CACA,MAAO,CAAAR,QAAQ,CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}