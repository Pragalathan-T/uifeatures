{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import api from'../utils/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatWidget(){const[open,setOpen]=useState(false);const[messages,setMessages]=useState([{role:'assistant',text:'Hi! I can help with exams, starting tests, and results.'}]);const[input,setInput]=useState('');const listRef=useRef(null);useEffect(()=>{if(listRef.current){listRef.current.scrollTop=listRef.current.scrollHeight;}},[messages]);const send=async()=>{const text=input.trim();if(!text)return;setMessages(m=>[...m,{role:'user',text}]);setInput('');try{var _res$headers$get;const userId=localStorage.getItem('username')||'guest';// Try streaming SSE first for real-time AI; fallback to non-stream API\nconst streamUrl=`${process.env.REACT_APP_API_URL||''}/api/chat/stream?message=${encodeURIComponent(text)}&userId=${encodeURIComponent(userId)}`.replace(/\\/$/,'');const res=await fetch(streamUrl,{headers:{Accept:'text/event-stream'}});if(res.ok&&res.body&&(_res$headers$get=res.headers.get('content-type'))!==null&&_res$headers$get!==void 0&&_res$headers$get.includes('text/event-stream')){let acc='';setMessages(m=>[...m,{role:'assistant',text:''}]);const reader=res.body.getReader();const decoder=new TextDecoder();while(true){const{value,done}=await reader.read();if(done)break;const chunk=decoder.decode(value);acc+=chunk;setMessages(m=>{const copy=[...m];copy[copy.length-1]={role:'assistant',text:acc};return copy;});}}else{var _fallback$data;const fallback=await api.chatMessage({message:text,userId});const reply=(fallback===null||fallback===void 0?void 0:(_fallback$data=fallback.data)===null||_fallback$data===void 0?void 0:_fallback$data.reply)||'Sorry, I did not understand that.';setMessages(m=>[...m,{role:'assistant',text:reply}]);}}catch{setMessages(m=>[...m,{role:'assistant',text:'Network error. Please try again.'}]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"fixed right-4 z-50\",style:{bottom:open?100:24},children:[open&&/*#__PURE__*/_jsxs(\"div\",{className:\"w-80 h-96 bg-white rounded-xl shadow-lg ring-1 ring-gray-200 flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-2 bg-[#2563eb] text-white font-semibold\",children:\"Assistant\"}),/*#__PURE__*/_jsx(\"div\",{ref:listRef,className:\"flex-1 overflow-y-auto p-3 space-y-2 bg-[#f9fafb]\",children:messages.map((m,idx)=>/*#__PURE__*/_jsx(\"div\",{className:m.role==='user'?'text-right':'text-left',children:/*#__PURE__*/_jsx(\"span\",{className:m.role==='user'?'inline-block bg-[#2563eb] text-white px-3 py-2 rounded-2xl':'inline-block bg-white ring-1 ring-gray-200 text-gray-900 px-3 py-2 rounded-2xl',children:m.text})},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-2 flex items-center gap-2 border-t\",children:[/*#__PURE__*/_jsx(\"input\",{value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>{if(e.key==='Enter')send();},placeholder:\"Type your question...\",className:\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563eb]\"}),/*#__PURE__*/_jsx(\"button\",{onClick:send,className:\"rounded-lg bg-[#2563eb] text-white px-3 py-2\",children:\"Send\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOpen(v=>!v),className:\"rounded-full shadow-lg bg-[#2563eb] text-white w-12 h-12 grid place-items-center hover:bg-[#1e40af]\",\"aria-label\":\"Toggle chat\",children:open?'Ã—':'ðŸ’¬'})]});}","map":{"version":3,"names":["React","useEffect","useRef","useState","api","jsx","_jsx","jsxs","_jsxs","ChatWidget","open","setOpen","messages","setMessages","role","text","input","setInput","listRef","current","scrollTop","scrollHeight","send","trim","m","_res$headers$get","userId","localStorage","getItem","streamUrl","process","env","REACT_APP_API_URL","encodeURIComponent","replace","res","fetch","headers","Accept","ok","body","get","includes","acc","reader","getReader","decoder","TextDecoder","value","done","read","chunk","decode","copy","length","_fallback$data","fallback","chatMessage","message","reply","data","className","style","bottom","children","ref","map","idx","onChange","e","target","onKeyDown","key","placeholder","onClick","v"],"sources":["/workspace/reactapp/src/components/ChatWidget.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport api from '../utils/api';\n\nexport default function ChatWidget() {\n  const [open, setOpen] = useState(false);\n  const [messages, setMessages] = useState([\n    { role: 'assistant', text: 'Hi! I can help with exams, starting tests, and results.' }\n  ]);\n  const [input, setInput] = useState('');\n  const listRef = useRef(null);\n\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.scrollTop = listRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const send = async () => {\n    const text = input.trim();\n    if (!text) return;\n    setMessages((m) => [...m, { role: 'user', text }]);\n    setInput('');\n    try {\n      const userId = localStorage.getItem('username') || 'guest';\n      // Try streaming SSE first for real-time AI; fallback to non-stream API\n      const streamUrl = `${process.env.REACT_APP_API_URL || ''}/api/chat/stream?message=${encodeURIComponent(text)}&userId=${encodeURIComponent(userId)}`.replace(/\\/$/, '');\n      const res = await fetch(streamUrl, { headers: { Accept: 'text/event-stream' } });\n      if (res.ok && res.body && res.headers.get('content-type')?.includes('text/event-stream')) {\n        let acc = '';\n        setMessages((m) => [...m, { role: 'assistant', text: '' }]);\n        const reader = res.body.getReader();\n        const decoder = new TextDecoder();\n        while (true) {\n          const { value, done } = await reader.read();\n          if (done) break;\n          const chunk = decoder.decode(value);\n          acc += chunk;\n          setMessages((m) => {\n            const copy = [...m];\n            copy[copy.length - 1] = { role: 'assistant', text: acc };\n            return copy;\n          });\n        }\n      } else {\n        const fallback = await api.chatMessage({ message: text, userId });\n        const reply = fallback?.data?.reply || 'Sorry, I did not understand that.';\n        setMessages((m) => [...m, { role: 'assistant', text: reply }]);\n      }\n    } catch {\n      setMessages((m) => [...m, { role: 'assistant', text: 'Network error. Please try again.' }]);\n    }\n  };\n\n  return (\n    <div className=\"fixed right-4 z-50\" style={{ bottom: open ? 100 : 24 }}>\n      {open && (\n        <div className=\"w-80 h-96 bg-white rounded-xl shadow-lg ring-1 ring-gray-200 flex flex-col overflow-hidden\">\n          <div className=\"px-4 py-2 bg-[#2563eb] text-white font-semibold\">Assistant</div>\n          <div ref={listRef} className=\"flex-1 overflow-y-auto p-3 space-y-2 bg-[#f9fafb]\">\n            {messages.map((m, idx) => (\n              <div key={idx} className={m.role === 'user' ? 'text-right' : 'text-left'}>\n                <span className={\n                  m.role === 'user'\n                    ? 'inline-block bg-[#2563eb] text-white px-3 py-2 rounded-2xl'\n                    : 'inline-block bg-white ring-1 ring-gray-200 text-gray-900 px-3 py-2 rounded-2xl'\n                }>{m.text}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"p-2 flex items-center gap-2 border-t\">\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => { if (e.key === 'Enter') send(); }}\n              placeholder=\"Type your question...\"\n              className=\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563eb]\"\n            />\n            <button onClick={send} className=\"rounded-lg bg-[#2563eb] text-white px-3 py-2\">Send</button>\n          </div>\n        </div>\n      )}\n\n      <button\n        onClick={() => setOpen((v) => !v)}\n        className=\"rounded-full shadow-lg bg-[#2563eb] text-white w-12 h-12 grid place-items-center hover:bg-[#1e40af]\"\n        aria-label=\"Toggle chat\"\n      >\n        {open ? 'Ã—' : 'ðŸ’¬'}\n      </button>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}